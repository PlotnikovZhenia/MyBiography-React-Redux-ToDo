{"version":3,"sources":["Components/Summary/Contscts/Contacts.module.scss","Components/ToDo/ToDoHeader/ToDoHeader.module.scss","Components/ToDo/ToDoMain.module.scss","Components/ToDoWithRedux/ComponentsOfToDo/ToDoHeader/ToDoHeader.module.scss","Components/ToDoWithRedux/ComponentsOfToDo/ToDoMain.module.scss","Components/Summary/General/GeneralInformation.module.scss","Components/Summary/education/education.module.scss","Components/Summary/Biography.module.scss","Components/Summary/Additional_Education/Additional_Education.module.scss","Components/Summary/Work/Work.module.scss","Components/Navbar.module.scss","Components/Main/Home.module.scss","Components/Error.module.scss","Components/Summary/General/GeneralInformation.tsx","Components/Summary/Contscts/Contacts.tsx","Components/Summary/education/education.tsx","Components/Summary/Additional_Education/Additional_Education.tsx","Components/Summary/Work/Work.tsx","Components/Navbar.tsx","Components/Summary/Biography.tsx","Components/Main/Home.tsx","Components/ToDo/ToDoHeader/ToDoHeader.tsx","Components/ToDo/ToDoSearchPanel/Search-panel.tsx","Components/ToDo/ToDo-list/todo-list-item.tsx","Components/ToDo/ToDo-list/todo-list.tsx","Components/ToDo/NewTodo/NewTodo.tsx","Components/ToDo/Information/Information.tsx","Components/ToDo/ToDoMain.tsx","Components/ToDoWithRedux/ComponentsOfToDo/redux/actions/actionType.js","Components/ToDoWithRedux/ComponentsOfToDo/redux/actions/index.js","Components/ToDoWithRedux/ComponentsOfToDo/ToDoHeader/ToDoHeader.tsx","Components/ToDoWithRedux/ComponentsOfToDo/ToDo-list/todo-list-item.tsx","Components/ToDoWithRedux/ComponentsOfToDo/ToDo-list/todo-list.tsx","Components/ToDoWithRedux/ComponentsOfToDo/Information/Information.tsx","Components/ToDoWithRedux/ComponentsOfToDo/ToDoSearchPanel/Search-panel.tsx","Components/ToDoWithRedux/ComponentsOfToDo/NewTodo/NewTodo.tsx","Components/ToDoWithRedux/ComponentsOfToDo/redux/Reducers/methods.js","Components/ToDoWithRedux/ComponentsOfToDo/redux/store.js","Components/ToDoWithRedux/ComponentsOfToDo/ToDoMain.tsx","Components/Error.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","GeneralInformation","age","now","Date","today","getFullYear","getMonth","getDate","dob","dobnow","className","classes","general_social","src","alt","Contacts","social","social_details","mail","social_networks","href","Education","education","AdditionalEducation","add_education","Work","work","Navbar","navbar","to","Biography","general","Home","home_block","ToDoHeader","visibleAllDone","visibleDone","countsUnDone","visibleNotDone","countsAllDone","countsDone","app_header","app_counts","onClick","SearchPanel","visibleSearch","useState","searchText","setSearchText","type","onChange","event","target","value","placeholder","TodoListItem","label","index","important","done","onDeleted","changeItemDone","stateimportant","setImportant","classNameDone","name","TodoList","todos","elements","map","item","id","itemProps","NewTodo","addItem","text","setText","Information","ToDoComponent","todoData","setTodoDate","beforeFilterDate","setBeforeFilterDate","setCountsDone","length","setCountsUnDone","setCountsAllDone","todo_app","doneArray","filter","undoneArray","top_panel","searchArray","includes","newItem","idx","findIndex","el","begin","concat","splice","after","newArray","beforeArray","ADD_ITEM","DELETE_ITEM","VISIBLE_SEARCH","CHANGE_ITEMDONE","VISIBLE_ALLDONE","VISIBLE_DONE","VISIBLE_NOTDONE","payload","deleteItem","connect","state","actions","todoDate","INITIAL_STATE","Todo","action","console","log","store","createStore","ToDo","Error","error_information","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82b51006.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"social\":\"Contacts_social__3LvAq\",\"social_details\":\"Contacts_social_details__2a9nC\",\"social_networks\":\"Contacts_social_networks__1A8Lw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_header\":\"ToDoHeader_app_header__3qoAt\",\"app_header_done\":\"ToDoHeader_app_header_done__unIgW\",\"app_counts\":\"ToDoHeader_app_counts__24FlW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo_app\":\"ToDoMain_todo_app__2eexY\",\"top_panel\":\"ToDoMain_top_panel__UFD6k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_header\":\"ToDoHeader_app_header__3n4bk\",\"app_header_done\":\"ToDoHeader_app_header_done__2stWA\",\"app_counts\":\"ToDoHeader_app_counts__1KcbM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo_app\":\"ToDoMain_todo_app__2NikJ\",\"top_panel\":\"ToDoMain_top_panel__2OGtX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"general_social\":\"GeneralInformation_general_social__2GgDK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"education\":\"education_education__GFIlo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"general\":\"Biography_general__2NFkt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add_education\":\"Additional_Education_add_education__SXumv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"work\":\"Work_work__2N7qQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1mv1o\",\"home_block\":\"Navbar_home_block__S1p8T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home_block\":\"Home_home_block__3jUM_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_information\":\"Error_error_information__1XbgP\"};","import React from \"react\";\r\nimport classes from \"./GeneralInformation.module.scss\";\r\n\r\n\r\nconst GeneralInformation:React.FC=()=>{\r\n    const now:Date = new Date();\r\n    let today:Date = new Date(now.getFullYear(), now.getMonth(), now.getDate()); \r\n    let dob:Date = new Date(1993, 10, 4); \r\n    let dobnow:Date = new Date(today.getFullYear(), dob.getMonth(), dob.getDate());\r\n    let age:number; \r\n    age = today.getFullYear() - dob.getFullYear();\r\n    if (today < dobnow) {\r\n        age = age-1;\r\n    }\r\n    return(\r\n        <div className={classes.general_social}>\r\n            <img src=\"https://plotnikovzhenia.github.io/MyBiography-React-Redux-ToDo/my_photo.jpg\" alt=\"my_photo\"/>\r\n            <div>\r\n                <h1>Плотников Евгений Владимирович</h1>\r\n                <h3>Направление: React-разработка</h3>\r\n                <h3>Возраст: полных {age} лет</h3>\r\n                <h3>Город:Кропивницкий (Кировоград)</h3>\r\n                <h3>Языки: украинский, русский, английский (intermediate)</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default GeneralInformation;","import React from \"react\";\r\nimport classes from \"./Contacts.module.scss\";\r\n\r\nconst Contacts:React.FC=()=>{\r\n    return(\r\n        <div className={classes.social}>\r\n            <h2>Контакты</h2>\r\n            <div className={classes.social_details}>\r\n                <h3>Телефон: 066-95-58-415</h3>\r\n                <div className={classes.mail}>\r\n                    <h3>Email: niaplotzhekovni@gmail.com</h3>\r\n                </div>\r\n                <div className={classes.social_networks}>\r\n                    <h3>Социальные сети:</h3>\r\n                    <a href=\"https://www.facebook.com/niaplotzhekovni\"><img src=\"https://plotnikovzhenia.github.io/MyBiography-React-Redux-ToDo/facebook.svg\" alt=\"facebook\"/></a>\r\n                    <a href=\"https://www.instagram.com/zhenia__plotnikov/\" ><img src=\"https://plotnikovzhenia.github.io/MyBiography-React-Redux-ToDo/instagram.svg\" alt=\"instagram\"/></a>\r\n                    <a href=\"https://t.me/PlotnikovEugeniy\" ><img src=\"https://plotnikovzhenia.github.io/MyBiography-React-Redux-ToDo/telegram.svg\" alt=\"telegram\"/></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Contacts;","import React from \"react\";\r\nimport classes from \"./education.module.scss\";\r\n\r\n\r\nconst Education:React.FC=()=>{\r\n    return(\r\n        <div className={classes.education}>\r\n            <h2>Образование</h2>\r\n            <table>\r\n                <tbody>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Период времени</th>\r\n                    <th>Название ВУЗа</th>\r\n                    <th>Специальность</th>\r\n                </tr>\r\n                <tr>\r\n                    <td>1</td>\r\n                    <td>2011-2017</td>\r\n                    <td>КГПУ им. В.Винниченка</td>\r\n                    <td>История (магистр)</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>2</td>\r\n                    <td>2019-2021</td>\r\n                    <td>ЦГПУ (КГПУ) им. В.Винниченка</td>\r\n                    <td>Компьютерные науки (магистр)</td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\nexport default Education;","import React from \"react\";\r\nimport classes from \"./Additional_Education.module.scss\";\r\n\r\n\r\nconst AdditionalEducation:React.FC=()=>{\r\n    return(\r\n        <div className={classes.add_education}>\r\n            <h2>Дополнительное Образование</h2>\r\n            <div>\r\n                <div>\r\n                <h3>Время: 2020 г. (6 месяцев)</h3>\r\n                <h3>Направление курса: веб-программирование</h3>\r\n                </div>\r\n                <img src=\"https://plotnikovzhenia.github.io/MyBiography-React-Redux-ToDo/Certificate.jpg\" alt=\"сертификат\"></img>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AdditionalEducation;","import React from \"react\";\r\nimport classes from \"./Work.module.scss\";\r\n\r\n\r\nconst Work:React.FC=()=>{\r\n    return(\r\n        <div className={classes.work}>\r\n            <h2>Опыт работы</h2>\r\n            <h3>Должность: Модератор-оператор ПК  (обслуживание интернет-магазина)</h3>\r\n            <h3>Время: с 06.2018 по 07.2020 (2 года 1 месяц)</h3>\r\n            <h3>Организация: Технічне програмне рішення, Кропивницкий</h3>\r\n        </div>\r\n    )\r\n}\r\nexport default Work;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport classes from './Navbar.module.scss'\r\n\r\n\r\nconst Navbar: React.FC=()=>{\r\n  return (\r\n    <div>\r\n        <ul className={classes.navbar}>\r\n            <li><Link to=\"/\">Главная</Link></li>\r\n            <li><Link to=\"/biography\">Резюме</Link></li>\r\n            <li><Link to=\"/todolist\">ToDoList (without Redux)</Link></li>\r\n            <li><Link to=\"/todolistRedux\">ToDoList (Redux)</Link></li>\r\n        </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\nimport GeneralInformation from './General/GeneralInformation';\nimport Contacts from './Contscts/Contacts';\nimport Education from './education/education';\nimport classes from './Biography.module.scss';\nimport AdditionalEducation from './Additional_Education/Additional_Education';\nimport Work from './Work/Work';\nimport Navbar from '../Navbar';\n\nconst Biography: React.FC=()=>{\n  return (\n    <>\n      <Navbar/>\n      <div className={classes.general}>\n        <GeneralInformation/>\n        <hr/>\n        <Education/>\n        <hr/>\n        <AdditionalEducation/>\n        <hr/>\n        <Work/>\n        <hr/>\n        <Contacts/>\n      </div>\n    </>\n  );\n}\n\nexport default Biography;\n","import React from 'react';\nimport Navbar from '../Navbar';\nimport classes from './Home.module.scss';\n\n\nconst Home: React.FC=()=>{\n  return (\n    <div>\n      <Navbar/>\n      <div className={classes.home_block}>\n      <h1>Приветствую на моей страничке, уважаемый гость !</h1>\n      <h3>Сдесь в соответствующих разделах Вы сможете увидеть краткие автобиографические данные, достижения обо мне,\n         а также ознакомится на основе даного проекта тем самым с моими знаниями, умениями работы\n         с библиотекой React.js, его роутингом, Redux-архитектурой, Typescript</h3>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\r\nimport classes from './ToDoHeader.module.scss';\r\n\r\ninterface IToDoHeader {\r\n    visibleAllDone: () => void,\r\n    visibleDone: () => void\r\n    visibleNotDone: () => void,\r\n    countsAllDone:number,\r\n    countsUnDone:number\r\n    countsDone:number\r\n  }\r\n\r\nconst ToDoHeader=({visibleAllDone,visibleDone,countsUnDone,visibleNotDone,countsAllDone,countsDone}:IToDoHeader)=>{\r\n    return (\r\n        <>\r\n            <h1 className={classes.app_header}>Todo List</h1>\r\n            <h5>ToDolist: всего задач {countsAllDone}, выполненых {countsDone}, осталось {countsUnDone}</h5>\r\n            <div className={classes.app_counts}>\r\n            <button onClick={visibleAllDone}>Снять фильтер</button>\r\n            <button onClick={visibleDone}>Уже выполнили</button>\r\n            <button onClick={visibleNotDone}>Осталось</button>\r\n            </div>\r\n        </>\r\n    );\r\n  }\r\n  \r\n  export default ToDoHeader;\r\n  ","import React,{useState} from 'react';\r\n\r\ninterface ISearchPanel {\r\n  visibleSearch:(searchText:string)=>void\r\n}\r\n\r\nconst SearchPanel = ({visibleSearch}:ISearchPanel) => {\r\n  const [searchText,setSearchText]=useState('');\r\n  const onTextSearch=(event: {target: HTMLInputElement})=>{\r\n      setSearchText(event.target.value)\r\n  }\r\n  return (\r\n    <>\r\n    <input type=\"text\"onChange={onTextSearch} placeholder=\"поиск\" />\r\n    <button onClick={()=>visibleSearch(searchText)}>Найти</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchPanel;","import React, { useState } from 'react';\r\nimport './todo-list-item.scss';\r\n\r\ninterface ITodoListItemProps {\r\n  label:string,\r\n  index:number,\r\n  important:boolean,\r\n  done:boolean,\r\n  onDeleted: () => void,\r\n  changeItemDone: () => void\r\n}\r\n\r\nconst TodoListItem = ({ label, index, important ,done,onDeleted,changeItemDone }:ITodoListItemProps) => {\r\n  const [stateimportant,setImportant]=useState(important);\r\n  let classNameDone='';\r\n  if(done){\r\n    classNameDone='done';\r\n  }else if(stateimportant){\r\n    classNameDone='important';\r\n  }else{\r\n    classNameDone='';\r\n  }\r\n  return (\r\n    <>\r\n            <td>\r\n            {index+1}.\r\n            </td>\r\n            <td>\r\n            <span className={classNameDone}>\r\n              {label}\r\n            </span>\r\n            </td>\r\n            <td>\r\n            <input onClick={onDeleted} type=\"image\"  className=\"btn_delete\" name=\"image\" src=\"https://plotnikovzhenia.github.io/MyBiography-React-Redux-ToDo/Delete.svg\" alt=\"Delete\"></input>\r\n            </td>\r\n            <td>\r\n            <input onClick={changeItemDone} type=\"image\" className=\"btn_delete\" name=\"image\" src=\"https://plotnikovzhenia.github.io/MyBiography-React-Redux-ToDo/Done.svg\" alt=\"Done\"></input>\r\n            </td>\r\n            <td>\r\n            <input onClick={()=>setImportant(!stateimportant)} type=\"image\" className=\"btn_attention\" name=\"image\" src=\"https://plotnikovzhenia.github.io/MyBiography-React-Redux-ToDo/attention.svg\" alt=\"Attention\"></input>\r\n            </td>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import React from 'react';\r\nimport TodoListItem from './todo-list-item';\r\nimport './todo-list.scss';\r\n\r\ninterface IItem {\r\n  label:string,\r\n  important:boolean,\r\n  done:boolean,\r\n  id:number\r\n}\r\ninterface ITodoListProps {\r\n    todos: IItem[],\r\n    onDeleted: (id: number) => void,\r\n    changeItemDone: (id: number) => void\r\n}\r\n\r\nconst TodoList= ({ todos,onDeleted,changeItemDone }:ITodoListProps) => {\r\n  const elements = todos.map((item, index) => {\r\n    const { id, ...itemProps  } = item;\r\n    return (\r\n      <tr key={id} className=\"table-group-item\">\r\n        <TodoListItem {...itemProps  } onDeleted={()=>onDeleted(id)} changeItemDone={()=>changeItemDone(id)} index={index} />\r\n      </tr>\r\n    );\r\n  });\r\n  return (\r\n   <table className=\"table-group\">\r\n    <tbody>\r\n      { elements }\r\n    </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React,{useState} from'react';\r\n\r\ninterface IAddProps {\r\n    addItem: (text: string) => void;\r\n  }\r\n\r\nconst NewTodo=({addItem}:IAddProps)=>{\r\n    const [text,setText]=useState('');\r\n    const textInput=(event:  { target: HTMLInputElement; })=>{\r\n        setText(event.target.value);\r\n    }\r\nconst pushItem=()=>{\r\n    if(text){\r\n        addItem(text);\r\n        setText('');\r\n        }\r\n    }\r\n    return(\r\n    <>\r\n        <input type=\"text\" value={text} placeholder=\"добавить\" onChange={textInput}/>\r\n        <button onClick={pushItem} >\r\n            Добавить пункт\r\n        </button>\r\n    </>\r\n    )\r\n}\r\n\r\n\r\nexport default NewTodo;","import React from 'react';\r\nimport './Information.scss';\r\nconst Information:React.FC=()=>{\r\n    return(\r\n        <>\r\n            <h4>Указатель:</h4>\r\n            <div className=\"information_todo_delete\">\r\n                <img src=\"https://plotnikovzhenia.github.io/MyBiography-React-Redux-ToDo/Delete.svg\" alt=\"delete\"/>\r\n                <p>&rarr;</p>\r\n                <p>&nbsp;</p>\r\n                <p>удалить задачу;</p>\r\n            </div>\r\n            <div className=\"information_todo_done\">\r\n                <img src=\"https://plotnikovzhenia.github.io/MyBiography-React-Redux-ToDo/Done.svg\" alt=\"done\"/>\r\n                <p>&rarr;</p>\r\n                <p>&nbsp;</p>\r\n                <p>Выполненная задача;</p>\r\n            </div>\r\n            <div className=\"information_todo_attention\">\r\n                <img src=\"https://plotnikovzhenia.github.io/MyBiography-React-Redux-ToDo/attention.svg\" alt=\"attention\"/>\r\n                <p>&rarr;</p>\r\n                <p>&nbsp;</p>\r\n                <p>Важная задача;</p>\r\n            </div>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default Information;","import React, { useState } from \"react\";\r\nimport ToDoHeader from \"./ToDoHeader/ToDoHeader\";\r\nimport SearchPanel from \"./ToDoSearchPanel/Search-panel\";\r\nimport TodoList from \"./ToDo-list/todo-list\";\r\nimport NewTodo from \"./NewTodo/NewTodo\";\r\nimport Information from \"./Information/Information\";\r\nimport Navbar from '../Navbar';\r\nimport classes from'./ToDoMain.module.scss';\r\n\r\ninterface IToDo{\r\n    label:string,\r\n    done:boolean,\r\n    important:boolean,\r\n    id:number\r\n}\r\n\r\nconst ToDoComponent=()=>{\r\n    const [todoData,setTodoDate]=useState<IToDo[]>([]); \r\n    const [beforeFilterDate,setBeforeFilterDate]=useState<IToDo[]>([]);\r\n    const [countsDone,setCountsDone]=useState<number>(0);\r\n    const[countsUnDone,setCountsUnDone]=useState(todoData.length)\r\n    const [countsAllDone,setCountsAllDone]=useState(todoData.length);\r\n    const deleteItem=(id:number)=>{\r\n        const idx=todoData.findIndex((el)=>el.id===id);\r\n        const beforeArray=todoData.concat([]);\r\n        const begin=beforeArray.splice(0,idx);\r\n        const after=todoData.splice(idx+1,todoData.length);\r\n          const newArray=[\r\n        ...begin,\r\n        ...after\r\n        ];\r\n        setTodoDate(newArray);\r\n        setBeforeFilterDate(newArray);\r\n        setCountsAllDone(newArray.length)\r\n    }\r\n    const addItem=(text:string)=>{\r\n        if(text){\r\n        setCountsAllDone(countsAllDone+1)\r\n        setCountsUnDone(countsUnDone+1)\r\n        const newItem={\r\n                label:text,\r\n                important: false,\r\n                done:false,\r\n                id:todoData.length+1,\r\n            }\r\n        setTodoDate([\r\n            ...todoData,\r\n                newItem\r\n        ]);\r\n        setBeforeFilterDate([\r\n            ...todoData,\r\n                newItem\r\n        ]);\r\n     }\r\n    }\r\n    const visibleSearch=(searchText:string)=>{\r\n        if(searchText){\r\n        const searchArray=todoData.filter(item=>item.label.includes(searchText))\r\n        setTodoDate(searchArray);\r\n        setCountsAllDone(searchArray.length)\r\n        const doneArray=searchArray.filter(item=>item.done===true)\r\n        setCountsDone(doneArray.length)\r\n        setCountsUnDone(searchArray.length-doneArray.length)\r\n        }else{\r\n            setTodoDate(beforeFilterDate);\r\n            setCountsAllDone(todoData.length);\r\n    }\r\n}\r\n    const changeItemDone=(id:number)=>{\r\n        const idx=todoData.findIndex((el)=>el.id===id);\r\n        const beforeArray=todoData.concat([]);\r\n        beforeArray[idx].done=!beforeArray[idx].done;\r\n        setTodoDate(beforeArray);\r\n        setBeforeFilterDate(beforeArray);\r\n        const doneArray=todoData.filter(item=>item.done===true)\r\n        setCountsDone(doneArray.length)\r\n        setCountsUnDone(beforeArray.length-doneArray.length)\r\n        \r\n       \r\n    }\r\n    const visibleAllDone=()=>{\r\n        if(beforeFilterDate.length>0){\r\n        setTodoDate(beforeFilterDate)\r\n        setCountsAllDone(beforeFilterDate.length)\r\n        }\r\n    }\r\n    const visibleDone=()=>{\r\n        setTodoDate(beforeFilterDate)\r\n        const doneArray=todoData.filter(item=>item.done===true)\r\n        setTodoDate(doneArray)\r\n        setCountsDone(doneArray.length)\r\n    }\r\n    const visibleNotDone=()=>{\r\n        setTodoDate(beforeFilterDate)\r\n        const undoneArray=todoData.filter(item=>item.done===false)\r\n        setCountsUnDone(undoneArray.length)\r\n        setTodoDate(undoneArray)\r\n    }\r\n    return (\r\n    <div>\r\n        <Navbar/>\r\n        <div className={classes.todo_app}>\r\n            <ToDoHeader countsAllDone={countsAllDone} countsDone={countsDone} countsUnDone={countsUnDone} visibleAllDone={visibleAllDone} visibleDone={visibleDone} visibleNotDone={visibleNotDone} />\r\n            <div className={classes.top_panel}>\r\n                <div>\r\n                    <SearchPanel visibleSearch={visibleSearch} />\r\n                </div>\r\n                <div>\r\n                    <NewTodo addItem={addItem}/>\r\n                </div>\r\n            </div>\r\n            <TodoList onDeleted={deleteItem} changeItemDone={changeItemDone} todos={todoData}/>\r\n            <Information/>\r\n        </div>\r\n    </div>\r\n    );\r\n  }\r\n  \r\n  export default ToDoComponent;\r\n  ","export const ADD_ITEM = 'ADD_ITEM';\r\nexport const DELETE_ITEM='DELETE_ITEM';\r\nexport const VISIBLE_SEARCH='VISIBLE_SERACH';\r\nexport const CHANGE_ITEMDONE='CHANGE_ITEMDONE';\r\nexport const VISIBLE_ALLDONE='VISIBLE_ALLDONE';\r\nexport const VISIBLE_DONE='VISIBLE_DONE';\r\nexport const VISIBLE_NOTDONE='VISIBLE_NOTDONE';\r\n","import {ADD_ITEM} from './actionType';\r\nimport {DELETE_ITEM} from './actionType';\r\nimport { VISIBLE_SEARCH } from './actionType';\r\nimport { CHANGE_ITEMDONE } from './actionType';\r\nimport { VISIBLE_ALLDONE } from './actionType';\r\nimport { VISIBLE_DONE } from './actionType';\r\nimport { VISIBLE_NOTDONE } from './actionType';\r\n  \r\n  export const addItem = (text) => ({\r\n    type: ADD_ITEM,\r\n    payload: { text }\r\n  });\r\n  export const deleteItem=(id)=>({\r\n    type:DELETE_ITEM,\r\n    payload:{id}\r\n  })\r\n  export const visibleSearch=(searchText)=>({\r\n    type:VISIBLE_SEARCH,\r\n    payload:{searchText}\r\n  })\r\n  export const changeItemDone=(id)=>({\r\n    type:CHANGE_ITEMDONE,\r\n    payload:{id}\r\n  })\r\n  export const visibleAllDone=()=>({\r\n    type:VISIBLE_ALLDONE,\r\n    payload:null\r\n  })\r\n  export const visibleDone=()=>({\r\n    type:VISIBLE_DONE,\r\n    payload:null\r\n  })\r\n  export const visibleNotDone=()=>({\r\n    type:VISIBLE_NOTDONE,\r\n    payload:null\r\n  })\r\n\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../redux/actions';\r\nimport classes from './ToDoHeader.module.scss';\r\n\r\ninterface IToDoHeader {\r\n  visibleAllDone: () => void,\r\n  visibleDone: () => void\r\n  visibleNotDone: () => void,\r\n  countsAllDone:number,\r\n  countsUnDone:number\r\n  countsDone:number\r\n}\r\ninterface IStateCounts {\r\n  countsUnDone:number,\r\n  countsAllDone:number,\r\n  countsDone:number\r\n}\r\n\r\nconst ToDoHeader=({visibleAllDone,visibleDone,countsUnDone,visibleNotDone,countsAllDone,countsDone}:IToDoHeader)=>{\r\n    return (\r\n        <>\r\n            <h1 className={classes.app_header}>Todo List</h1>\r\n            <h5>ToDolist: всего задач {countsAllDone}, выполненых {countsDone}, осталось {countsUnDone}</h5>\r\n            <div className={classes.app_counts}>\r\n            <button onClick={visibleAllDone}>Снять фильтер</button>\r\n            <button onClick={visibleDone}>Уже выполнили</button>\r\n            <button onClick={visibleNotDone}>Осталось</button>\r\n            </div>\r\n        </>\r\n    );\r\n  }\r\n  const mapStateToProps = (state:IStateCounts) => {\r\n    const {countsUnDone,countsAllDone,countsDone} = state;\r\n    return {countsUnDone,countsAllDone,countsDone };\r\n  };\r\n  export default connect(mapStateToProps, actions) (ToDoHeader);\r\n  ","import React, { useState } from 'react';\r\nimport './todo-list-item.scss';\r\n\r\ninterface ITodoListItemProps {\r\n  label:string,\r\n  index:number,\r\n  important:boolean,\r\n  done:boolean,\r\n  onDeleted: () => void,\r\n  changeItemDone: () => void\r\n}\r\n\r\nconst TodoListItem = ({ label, index, important ,done,onDeleted,changeItemDone }:ITodoListItemProps) => {\r\n  const [stateimportant,setImportant]=useState(important);\r\n  let classNameDone='';\r\n  if(done){\r\n    classNameDone='done';\r\n  }else if(stateimportant){\r\n    classNameDone='important';\r\n  }else{\r\n    classNameDone='';\r\n  }\r\n  return (\r\n    <>\r\n            <td>\r\n            {index+1}.\r\n            </td>\r\n            <td>\r\n            <span className={classNameDone}>\r\n              {label}\r\n            </span>\r\n            </td>\r\n            <td>\r\n            <input onClick={onDeleted} type=\"image\"  className=\"btn_delete\" name=\"image\" src=\"https://plotnikovzhenia.github.io/MyBiography-React-Redux-ToDo/Delete.svg\" alt=\"Delete\"></input>\r\n            </td>\r\n            <td>\r\n            <input onClick={changeItemDone} type=\"image\" className=\"btn_delete\" name=\"image\" src=\"https://plotnikovzhenia.github.io/MyBiography-React-Redux-ToDo/Done.svg\" alt=\"Done\"></input>\r\n            </td>\r\n            <td>\r\n            <input onClick={()=>setImportant(!stateimportant)} type=\"image\" className=\"btn_attention\" name=\"image\" src=\"https://plotnikovzhenia.github.io/MyBiography-React-Redux-ToDo/attention.svg\" alt=\"Attention\"></input>\r\n            </td>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import React from 'react';\r\nimport TodoListItem from './todo-list-item';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../redux/actions';\r\nimport { IItem} from '../Types/types';\r\nimport './todo-list.scss';\r\n\r\ninterface ITodoListProps {\r\n  todoDate: IItem[],\r\n  deleteItem: (id: number) => void,\r\n  changeItemDone: (id: number) => void\r\n}\r\ninterface IState{\r\n  todoDate: IItem[],\r\n  beforeFilterDate: IItem[]\r\n}\r\n\r\nconst TodoList= ({todoDate, deleteItem, changeItemDone}:ITodoListProps) => {\r\n  const elements = todoDate.map((item, index) => {\r\n    const { id, ...itemProps } = item;\r\n    return (\r\n      <tr key={id} className=\"table-group-item\">\r\n        <TodoListItem {...itemProps }  onDeleted={()=>deleteItem(id)} changeItemDone={()=>changeItemDone(id)} index={index} />\r\n      </tr>\r\n    );\r\n  });\r\n  return (\r\n   <table className=\"table-group\">\r\n    <tbody>\r\n      { elements }\r\n    </tbody>\r\n    </table>\r\n  );\r\n};\r\nconst mapStateToProps = (state:IState) => {\r\n  const {todoDate,beforeFilterDate} = state;\r\n  return { todoDate,beforeFilterDate};\r\n};\r\n\r\nexport default connect(mapStateToProps,actions) (TodoList);\r\n","import React from 'react';\r\nimport './Information.scss';\r\nconst Information:React.FC=()=>{\r\n    return(\r\n        <>\r\n            <h4>Указатель:</h4>\r\n            <div className=\"information_todo_delete\">\r\n                <img src=\"https://plotnikovzhenia.github.io/MyBiography-React-Redux-ToDo/Delete.svg\" alt=\"delete\"/>\r\n                <p>&rarr;</p>\r\n                <p>&nbsp;</p>\r\n                <p>удалить задачу;</p>\r\n            </div>\r\n            <div className=\"information_todo_done\">\r\n                <img src=\"https://plotnikovzhenia.github.io/MyBiography-React-Redux-ToDo/Done.svg\" alt=\"done\"/>\r\n                <p>&rarr;</p>\r\n                <p>&nbsp;</p>\r\n                <p>Выполненная задача;</p>\r\n            </div>\r\n            <div className=\"information_todo_attention\">\r\n                <img src=\"https://plotnikovzhenia.github.io/MyBiography-React-Redux-ToDo/attention.svg\" alt=\"attention\"/>\r\n                <p>&rarr;</p>\r\n                <p>&nbsp;</p>\r\n                <p>Важная задача;</p>\r\n            </div>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default Information;","import React,{useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../redux/actions';\r\n\r\ninterface ISearchPanel {\r\n  visibleSearch:(searchText:string)=>void\r\n}\r\nconst SearchPanel = ({visibleSearch}:ISearchPanel) => {\r\n  const [searchText,setSearchText]=useState('');\r\n  const onTextSearch=(event: {target: HTMLInputElement})=>{\r\n      setSearchText(event.target.value)\r\n  }\r\n  return (\r\n    <>\r\n    <input type=\"text\"onChange={onTextSearch} placeholder=\"поиск\" />\r\n    <button onClick={()=>visibleSearch(searchText)}>Найти</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null,actions) (SearchPanel);","import React,{useState} from'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../redux/actions';\r\n\r\ninterface IAddProps {\r\n    addItem: (text: string) => void;\r\n  }\r\n\r\nconst NewTodo=({addItem}:IAddProps)=>{\r\n    const [text,setText]=useState('');\r\n    const textInput=(event:  { target: HTMLInputElement; })=>{\r\n        setText(event.target.value);\r\n    }\r\nconst pushItem=()=>{\r\n    if(text){\r\n    addItem(text);\r\n    setText('');\r\n    }\r\n}\r\n    return(\r\n    <>\r\n        <input type=\"text\" value={text} placeholder=\"добавить\" onChange={textInput}/>\r\n        <button onClick={pushItem} >\r\n            Добавить пункт\r\n        </button>\r\n    </>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null, actions) (NewTodo);","import {ADD_ITEM} from '../actions/actionType';\r\nimport { DELETE_ITEM } from '../actions/actionType';\r\nimport {VISIBLE_SEARCH} from '../actions/actionType';\r\nimport { CHANGE_ITEMDONE } from '../actions/actionType';\r\nimport { VISIBLE_ALLDONE } from '../actions/actionType';\r\nimport { VISIBLE_DONE } from '../actions/actionType';\r\nimport { VISIBLE_NOTDONE } from '../actions/actionType';\r\n  \r\n  const INITIAL_STATE= {\r\n    beforeFilterDate:[],\r\n    todoDate:[],\r\n    beforeArray:[],\r\n    countsDone:0,\r\n    countsUnDone:0,\r\n    countsAllDone:0\r\n  };\r\n  \r\n   const Todo = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case ADD_ITEM:\r\n        return {\r\n            beforeFilterDate:[\r\n              ...state.beforeFilterDate,\r\n                {\r\n                  label:action.payload.text,\r\n                  important: false,\r\n                  done:false,\r\n                  id:Date.now()\r\n              }\r\n            ],\r\n            todoDate:[\r\n              ...state.todoDate,\r\n              {\r\n                label:action.payload.text,\r\n                important: false,\r\n                done:false,\r\n                id:Date.now()\r\n            }\r\n          ],\r\n            countsAllDone:state.todoDate.length+1,\r\n            countsDone:state.countsDone,\r\n            countsUnDone:state.todoDate.length+1\r\n         }\r\n      case DELETE_ITEM:\r\n        console.log(state.todoDate);\r\n        console.log(state.beforeFilterDate);\r\n        return {\r\n        todoDate:[\r\n          ...state.todoDate.filter((item)=>item.id!==action.payload.id)\r\n        ],\r\n        beforeFilterDate:[\r\n          ...state.beforeFilterDate.filter((item)=>item.id!==action.payload.id)\r\n        ],\r\n        countsAllDone:state.todoDate.length-1,\r\n        countsDone:state.countsDone,\r\n        countsUnDone:state.todoDate.length-1\r\n        }\r\n        case VISIBLE_SEARCH:\r\n          return {\r\n          todoDate:[\r\n            ...state.todoDate.filter((item)=>item.label.includes(action.payload.searchText))\r\n          ],\r\n          beforeFilterDate:[\r\n            ...state.beforeFilterDate\r\n          ],\r\n          countsAllDone:state.countsAllDone,\r\n          countsDone:state.countsDone,\r\n          countsUnDone:state.countsUnDone\r\n        }\r\n        case CHANGE_ITEMDONE:\r\n          return{\r\n            todoDate:[\r\n              ...state.todoDate.map((item) => {\r\n            if (item.id === action.payload.id) {\r\n              item.done = !item.done;\r\n              return item;\r\n            }\r\n            return item;\r\n          }),\r\n            ],\r\n            beforeFilterDate:[\r\n              ...state.beforeFilterDate.map((item) => {\r\n                if (item.id === action.payload.id) {\r\n                  item.done = !item.done;\r\n                  return item;\r\n                }\r\n                return item;\r\n              }),\r\n            ],\r\n          countsAllDone:state.todoDate.length,\r\n          countsDone:state.todoDate.filter((item)=>item.done===true).length,\r\n          countsUnDone:state.todoDate.filter((item)=>item.done===false).length\r\n          }\r\n          case VISIBLE_ALLDONE:\r\n            return {\r\n              ...state,\r\n              todoDate:[...state.beforeFilterDate],\r\n              countsAllDone:state.todoDate.length,\r\n              countsDone:state.countsDone,\r\n              countsUnDone:state.countsUnDone\r\n                }\r\n          case VISIBLE_DONE:\r\n            return {\r\n              todoDate:[...state.todoDate.filter((item)=>item.done===true)],\r\n              beforeFilterDate:[...state.beforeFilterDate],\r\n              countsAllDone:state.todoDate.length,\r\n              countsDone:state.countsDone,\r\n              countsUnDone:state.countsUnDone\r\n            }\r\n          case VISIBLE_NOTDONE:\r\n              return {\r\n                todoDate:[...state.todoDate.filter((item)=>item.done===false)],\r\n                beforeFilterDate:[...state.beforeFilterDate],\r\n                countsAllDone:state.todoDate.length,\r\n                countsDone:state.countsDone,\r\n                countsUnDone:state.countsUnDone\r\n              }\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  export default Todo;","import { createStore } from 'redux';\r\nimport Todo from './Reducers/methods';\r\n\r\nexport const store = createStore(Todo);","import React from \"react\";\r\nimport ToDoHeader from \"./ToDoHeader/ToDoHeader\";\r\nimport TodoList from \"./ToDo-list/todo-list\";\r\nimport Information from \"./Information/Information\";\r\nimport SearchPanel from \"./ToDoSearchPanel/Search-panel\";\r\nimport NewTodo from \"./NewTodo/NewTodo\";\r\nimport Navbar from '../../Navbar';\r\nimport classes from'./ToDoMain.module.scss';\r\nimport { Provider } from 'react-redux';\r\nimport {store} from './redux/store';\r\n\r\n\r\nconst ToDo:React.FC=()=>{\r\n    return (\r\n    <Provider store={store}>\r\n    <div>\r\n        <Navbar/>\r\n        <div className={classes.todo_app}>\r\n        <ToDoHeader/>\r\n            <div className={classes.top_panel}>\r\n                <div>\r\n                    <SearchPanel/>\r\n                </div>\r\n                <div>    \r\n                    <NewTodo/>\r\n                </div>\r\n            </div>\r\n            <TodoList/>   \r\n            <Information/>    \r\n        </div>\r\n    </div>\r\n    </Provider>\r\n    );\r\n  }\r\n  \r\n  export default ToDo;\r\n  ","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classes from './Error.module.scss';\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst Error=()=>{\r\n    return(\r\n        <>\r\n        <Navbar/>\r\n        <div className={classes.error_information}>\r\n                <h1>404 Not Found</h1>\r\n                <p>Указаный адрес пока что не существует</p>\r\n                <Link to=\"/\">Назад к главной</Link>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default Error;","import React from 'react';\nimport Biography from './Components/Summary/Biography';\nimport Home from './Components/Main/Home';\nimport ToDoComponent from './Components/ToDo/ToDoMain';\nimport ToDo from './Components/ToDoWithRedux/ComponentsOfToDo/ToDoMain';\nimport Error from './Components/Error';\nimport { Routes,Route} from \"react-router-dom\";\n\n\nconst App: React.FC=()=>{\n  return (\n    <div>\n      <Routes>\n        <Route path=\"/\" element={<Home/>}/>\n        <Route path=\"/biography\" element={<Biography/>}/>\n        <Route path=\"/todolist\" element={<ToDoComponent/>}/>\n        <Route path=\"/todolistRedux\" element={<ToDo/>}/>\n        <Route path=\"*\" element={<Error/>}/>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}